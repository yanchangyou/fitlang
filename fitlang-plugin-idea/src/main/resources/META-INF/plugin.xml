<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
    <id>FitLang</id>
    <name>FitLang</name>
    <vendor email="yanchangyou@gmail.com" url="https://github.com/yanchangyou">yanchangyou</vendor>
    <idea-version since-build="231.0" until-build="331.*"/>
    <description><![CDATA[
    English: (后面有中文版)
    <br/>
    <br/>
<p>
Fit language is a lightweight programming language that is developer friendly and tool friendly.
Use AST + JSON to write code, and JSON is the only data type, making plug-in design convenient for extending node functionality.
</p>
<br/>
<p>
First demo, file name is hello.fit<br/>
<br/>
code:<br/>
<pre>
{
    "uni": "hello",
    "input": {
        "who": "world"
    }
}
</pre>
<br/>
<p>
The file 'hello. fit' ends with 'fit' and inherits the JSON language plugin that comes with IDEA, using JSON<br/>
<br/>
input: input json<br/>
<br/>
uni Uniform Node Identifier(like URI), distinguishing different processing, internally corresponding to an implementation class<br/>
<br/>
In the editor, right-click and select 'Run FitLang' to execute. After the code is executed, it will be output<br/>
<br/>
<pre>
{"message":"hello, world!"}
</pre>
<br/>
</p>
<br/>
<p>
<a href='https://github.com/yanchangyou/fitlang-demo'>more demo</a>
</p>
<br/>
<p>
The nodes that have been implemented so far are as follows:<br/>
<br/>
util nodes<br/>
hello: hello world demo<br/>
echo: Return input parameters as is<br/>
print: Console printing<br/>
log: log info node<br/>
sleep: Process sleep node<br/>
perf: performance  node<br/>
replaceContent: find and replace content<br/>
<br/>

json nodes<br/>
add: supports JSON addition<br/>
convert: Transform node, supports JSON to JSON conversion, using conversion expressions<br/>
convertObjectToArray: convert object to array<br/>
convertArrayToObject: convert array to object<br/>
convertToObjectArray: convert to object array<br/>
convertToBasicArray: convert to basic array<br/>
removeField: Remove the JSON field<br/>
removeEmptyField: Remove an empty field<br/>
mix: mix a json object<br/>
replace: replace output<br/>
mix: mix a json object<br/>
mixNode: execute node, and mix<br/>
get: get field value by json path<br/>
set: set field value by json path<br/>
getStruct: get json structure<br/>
getSchema: get json schema<br/>
compare: compare json<br/>
diff: diff json<br/>
<br/>

flow nodes (with child nodes)<br/>
sequence: Sequential execution node<br/>
batch: batch execution node<br/>
pipe: pipeline execution node<br/>
foreach: traverse JSON array field nodes<br/>
loop: loop execution node, loopTimes specifies the number of execution times<br/>
switch: branch execution node, switchField specifies the branch field<br/>
thread: thead node<br/>
call: call node<br/>
catch: try-catch node<br/>
assert: assert node<br/>
return: return json value<br/>
execute: execute input node define<br/>
<br/>

web nodes<br/>
http: supports HTTP client request<br/>
server: server node<br/>
proxy: proxy node<br/>
web: config web param, such as response header<br/>
<br/>

http nodes<br/>
http: http<br/>
postJson: http post json<br/>
postForm: http post form<br/>
httpGet: http get<br/>
httpPut: http put<br/>
httpDelete: http delete<br/>
httpHead: http head <br/>
postman: postman<br/>
<br/>

info nodes<br/>
systemInfo: os、memory info<br/>
info: jvm jdk info<br/>
<br/>

command nodes<br/>
cmd: cmd<br/>
telnet: telnet<br/>
telnets: telnets<br/>
telnet.http: telnet.http<br/>
telnet.https: telnet.https<br/>
<br/>

Monitoring nodes<br/>
startMonitor: start monitoring<br/>
getMonitorData: get monitoring data: CPU and Memory<br/>
getClientMonitorData: get client monitor data<br/>
receiveClientMonitorData: receive client monitor data<br/>
pushClientMonitorData: push client monitor data<br/>
getMonitorClient: get monitor client list<br/>
<br/>

IDE nodes<br/>
readEditor: read editor<br/>
writeEditor: write editor<br/>
showConfig: show config<br/>
readConfig: read config<br/>
openWebPage: open web page<br/>
showHtml: show web page<br/>
showJsonPage: show json page<br/>
chooseFile: choose file<br/>
showInfoMessage: show info message<br/>
showErrorMessage: show error message<br/>
showInputDialog: show input dialog<br/>
showOkCancelDialog: show Ok or cancel dialog<br/>
showGlobalConfigDialog: show global config dialog<br/>
showYesNoCancelDialog: show Yes, No, Cancel dialog<br/>
showPasswordDialog: show password dialog<br/>
showCheckboxOkCancelDialog: show checkbox Ok cancel dialog<br/>
<br/>

Office nodes<br/>
readExcel: read excel<br/>
writeExcel: write excel<br/>
mergeExcel: merge excel<br/>
readExcelForAllSheet: read excel for all sheet<br/>
<br/>

applet<br/>
applet: applet<br/>
<br/>

中文: <br/>
<br/>
<p>
fit语言是一门轻量级编程语言，开发人员友好和工具处理友好。<br/>
使用AST+JSON来编写代码，并且JSON是唯一的数据类型，插件式设计方便扩展节点功能。<br/>
</p>
<br/>
<p>
第一个demo: hello.fit<br/>
内容<br/>
<pre>
{
    "uni": "hello",
    "input": {
        "who": "world"
    }
}
</pre>
<br/>
<p>
hello.fit 后缀以fit结尾，语言插件继承IDEA自带的JSON语言，使用JSON的语法校验、高亮、格式等<br/>
input: 入参JSON<br/>
uni 统一节点描述符(借鉴URI)，区分不同的处理，内部对应一个实现类<br/>
编辑器里面，点击右键，选择【Run FitLang】执行，代码执行完将输出<br/>

<pre>
{"message":"hello, world!"}
</pre>

</p>
<br/>
<a href='https://github.com/yanchangyou/fitlang-demo'>更多demo</a>
<br/>
<br/>
<p>
目前已经实现的节点如下: <br/>
<br/>

实用节点<br/>
hello: hello world demo<br/>
echo: 原样返回入参<br/>
add: 支持json相加<br/>
print: 控制台打印<br/>
log: IDE控制台打印<br/>
sleep: 流程休眠节点<br/>
perf: 性能测试节点<br/>
replaceContent: 查找并替换文本内容<br/>
<br/>

JSON节点<br/>
add: 支持json相加<br/>
convert: 转换节点，支持json到json的转换，使用转换表达式<br/>
convertObjectToArray: 对象转数组<br/>
convertArrayToObject: 数组转换对象<br/>
convertToObjectArray: 转换为对象数组<br/>
convertToBasicArray: 转换为基本数组<br/>
removeField: 移除json字段<br/>
removeEmptyField: 移除空字段<br/>
replace: 替换结果输出<br/>
mix: 混入json对象<br/>
mixNode: 混入节点执行，用于嵌套字段场景<br/>
parseJson: 解析json字符串成json对象
stringifyJson: json对象转换为json字符串
replace: 替换结果输出<br/>
get: 用JsonPath获取字段值<br/>
set:用JsonPath设置字段值<br/>
getStruct: 获取json结构<br/>
getSchema: 获取JsonSchema<br/>
compare: 比较json<br/>
diff: 比较json，只返回差异<br/>
<br/>

流程节点（有child子节点）<br/>
sequence: 顺序执行节点<br/>
batch: 批处理节点<br/>
pipe: 管道执行节点<br/>
foreach: 遍历json数组字段节点<br/>
loop: 循环执行节点，loopTimes制定执行次数<br/>
switch: 分支执行节点，switchField指定分支字段<br/>
thread: 线程节点<br/>
call: 调用节点<br/>
execute: 执行节点<br/>
catch: 异常捕获节点<br/>
assert: 断言节点<br/>
return: 返回节点<br/>
<br/>

web节点<br/>
http: 支持http-client请求, postJson, postForm, httpGet, httpPut, httpDelete<br/>
server: 服务端节点<br/>
proxy: 代理节点<br/>
web: 配置web参数，响应头等<br/>
<br/>

http节点<br/>
http: http<br/>
postJson: http post json<br/>
postForm: http post form<br/>
httpGet: http get<br/>
httpPut: http put<br/>
httpDelete: http delete<br/>
httpHead: http head <br/>
postman: postman<br/>
<br/>

信息节点<br/>
systemInfo: CPU、内存信息<br/>
info: JVM, JDK, 运行时信息<br/>
<br/>

命令行节点<br/>
cmd: 命令行<br/>
telnet: telnet<br/>
telnets: telnets<br/>
telnet.http: telnet.http<br/>
telnet.https: telnet.https<br/>
<br/>

监控节点<br/>
startMonitor: 启动监控<br/>
getMonitorData: 获取监控数据: CPU和Memory<br/>
getClientMonitorData: 获取单个客户端监控数据<br/>
receiveClientMonitorData: 接收客户端监控数据<br/>
pushClientMonitorData: 推送监控数据<br/>
getMonitorClient: 获取监控客户端列表<br/>
<br/>

IDE节点<br/>
readEditor: 获取当前编辑器内容<br/>
writeEditor: 写入当前编辑器内容<br/>
showConfig: 显示配置<br/>
readConfig: 读取配置<br/>
openWebPage: 打开web页面<br/>
showHtml: show web page<br/>
showJsonPage: show json page<br/>
chooseFile: 选择文件<br/>
showInfoMessage: 显示消息<br/>
showErrorMessage: 显示错误信息<br/>
showWarningMessage: 显示警告信息<br/>
showInputDialog: 显示输入对话框<br/>
showOkCancelDialog: 显示确认或取消对话框<br/>
showGlobalConfigDialog: 显示全局配置对话框<br/>
showYesNoCancelDialog: Yes, No, Cancel对话框<br/>
showPasswordDialog: password对话框<br/>
showCheckboxOkCancelDialog: 勾选对话框<br/>
<br/>

办公软件节点<br/>
readExcel: 读取Excel<br/>
writeExcel: 写入Excel<br/>
mergeExcel: 合并Excel<br/>
readExcelForAllSheet: 读取所有sheet内容<br/>
<br/>

小应用<br/>
applet: 小应用<br/>
<br/>

</p>
    ]]></description>

    <!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <xi:include href="intellij.fit.xml">
        <xi:fallback/>
    </xi:include>

    <extensions defaultExtensionNs="com.intellij">
        <toolWindow id="FitLang Console" anchor="bottom" order="first" icon="/my/lang/icon/fit.svg"
                    factoryClass="my.lang.action.ScriptConsoleWindowFactory"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <fileEditorProvider implementation="my.lang.page.web.WebPageRenderProvider"/>
        <fileEditorProvider implementation="my.lang.page.pick.PickPageRenderProvider"/>
        <fileEditorProvider implementation="my.lang.page.render.JsonPageRenderProvider"/>
        <fileEditorProvider implementation="my.lang.page.action.JsonActionRenderProvider"/>
        <fileEditorProvider implementation="my.lang.page.app.JsonAppRenderProvider"/>
        <fileEditorProvider implementation="my.lang.page.diff.JsonDiffRenderProvider"/>
        <!--        <fileEditorProvider implementation="my.lang.page.fit.JsonFitRenderProvider"/>-->
        <fileEditorProvider implementation="my.lang.page.applet.AppletJsonAppRenderProvider"/>
    </extensions>

    <actions>
        <group id="FitActionGroup9" text="Fit Actions9" icon="/my/lang/icon/fit.svg" popup="true"
               searchable="true" class="my.lang.action.group.FitLangPluginActionGroup9">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <!--            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>-->
        </group>
        <group id="FitActionGroup8" text="Fit Actions8" icon="/my/lang/icon/fit.svg" popup="true"
               searchable="true" class="my.lang.action.group.FitLangPluginActionGroup8">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <!--            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>-->
        </group>
        <group id="FitActionGroup7" text="Fit Actions7" icon="/my/lang/icon/fit.svg" popup="true"
               searchable="true" class="my.lang.action.group.FitLangPluginActionGroup7">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <!--            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>-->
        </group>
        <group id="FitActionGroup6" text="Fit Actions6" icon="/my/lang/icon/fit.svg" popup="true"
               searchable="true" class="my.lang.action.group.FitLangPluginActionGroup6">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <!--            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>-->
        </group>

        <group id="FitActionGroup5" text="Fit Actions5" icon="/my/lang/icon/fit.svg" popup="true"
               searchable="true" class="my.lang.action.group.FitLangPluginActionGroup5">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <!--            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>-->
        </group>
        <group id="FitActionGroup4" text="Fit Actions4" icon="/my/lang/icon/fit.svg" popup="true"
               searchable="true" class="my.lang.action.group.FitLangPluginActionGroup4">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <!--            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>-->
        </group>
        <group id="FitActionGroup3" text="Fit Actions3" icon="/my/lang/icon/fit.svg" popup="true"
               searchable="true" class="my.lang.action.group.FitLangPluginActionGroup3">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <!--            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>-->
        </group>
        <group id="FitActionGroup2" text="Fit Actions2" icon="/my/lang/icon/fit.svg" popup="true"
               searchable="true" class="my.lang.action.group.FitLangPluginActionGroup2">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <!--            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>-->
        </group>
        <group id="FitActionGroup1" text="Fit Actions1" icon="/my/lang/icon/fit.svg" popup="true"
               searchable="true" class="my.lang.action.group.FitLangPluginActionGroup1">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <!--            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>-->
        </group>
        <group id="FitActionGroup0" text="Fit Actions0" icon="/my/lang/icon/fit.svg" popup="true"
               searchable="true" class="my.lang.action.group.FitLangPluginActionGroup0">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
        </group>

        <action id="RunFitLang" class="my.lang.action.ScriptRunCodeAction" text="Fit Run"
                description="Run fit lang" icon="/my/lang/icon/fit.svg">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>
            <keyboard-shortcut first-keystroke="alt J" keymap="$default"/>
            <keyboard-shortcut first-keystroke="shift alt J" keymap="$default"/>
        </action>

    </actions>

    <change-notes>
        <![CDATA[
        FitLang update list:<br/>
        <ul>
            <li>0.11.2 add web page and pick page</li>
            <li>0.11.0 applet support synchronize execute; remove convertKeyValueList, replace by convertArrayToObject; refine diff page</li>
            <li>0.10.16 native form support data type, edit type and title config</li>
            <li>0.10.15 applet support format, field type; fix json compare</li>
            <li>0.10.14 refine applet button and split; compare node support onlyDiff, toArray and sum; remove node diff</li>
            <li>0.10.13 refine compare and applet</li>
            <li>0.10.12 add native form, json compare; applet support config split index</li>
            <li>0.10.11 applet support save action; refine applet; add number tool and text tool</li>
            <li>0.10.10 http support useInput config; applet support reload, clear output; fix project plugin, choose file in applet</li>
            <li>0.10.9 rename mini app to applet; refine applet support ui field</li>
            <li>0.10.8 add node: mini app; refine fix script visualization; update idea version to 232; fix writeExcel bug</li>
            <li>0.10.7 fit support visualization; refine diff, toolbar</li>
            <li>0.10.6 support script and graph synchronize; some bug fix</li>
            <li>0.10.5 add node: showDiff; support diff.json file type; app define support exchange input output; fix fit server path bug</li>
            <li>0.10.4 add node: getSchema; fix JBCefBrowser not dispose; refine app define</li>
            <li>0.10.3 add app with json and json form</li>
            <li>0.10.2 json page support json form; add action render</li>
            <li>0.10.1 page json redefine</li>
            <li>0.10.0 upgrade idea version to 231; embed amis and logicflow</li>
            <li>0.9.7 add node: showHtml, showJsonPage</li>
            <li>0.9.6 add node: showGlobalConfigDialog, showYesNoCancelDialog, showPasswordDialog, showCheckboxOkCancelDialog, convertObjectToArray, convertArrayToObject, convertToObjectArray, convertToBasicArray, showWarningMessage; remove node: readEditorSearch, readEditorReplace; refine node: readExcel, writeExcel, mergeExcel</li>
            <li>0.9.5 add node: chooseFile, readExcel, writeExcel, mergeExcel, readExcelForAllSheet; refine code completion; project plugin support synchronize config</li>
            <li>0.9.4 add node: openWebPage, showInfoMessage, showErrorMessage, showOkCancelDialog, showInputDialog; refine node: http; add debug mode; refine code complete</li>
            <li>0.9.3 add node: openNodePage, showConfig, readConfig; refine project plugin config; refine node: switch</li>
            <li>0.9.2 fix parse json from substring; refine node: readEditor</li>
            <li>0.9.1 fix cmd charset when error; parseJson support substring; alias parseJson parse, stringifyJson stringify</li>
            <li>0.9.0 add node: replaceContent; refine node: http</li>
            <li>0.8.9 add node: getClipboard, setClipboard; http support retry</li>
            <li>0.8.8 refine node: get, set, readEditor, writeEditor</li>
            <li>0.8.7 refine node: stringifyJson, getStruct, readEditor, writeEditor, cmd; refine project plugin menu</li>
            <li>0.8.6 add node: readEditor, writeEditor, set, setGlobal(rename by set)</li>
            <li>0.8.5 add node: sortField, getStruct, get; project plugin add sortJsonFile, sortJson and getStruct; plugin support config refresh after action</li>
            <li>0.8.4 add node: log; refine node: set, assert, writeFile, readFile; refine node template</li>
            <li>0.8.3 add fitlang-doc: flow and util nodes; refine nodes: server, set, perf; fix get userHome bug</li>
            <li>0.8.2 add fitlang-doc; refine node: server, hello, foreach, return, mix, catch; remove needFormatJsonInConsoleFlag attribute</li>
            <li>0.8.1 project IDE plugin support 10 menus and sub menu; add go-doudou ide plugin</li>
            <li>0.8.0 support project IDE plugin by plugin.fit, support 5 menu groups</li>
            <li>0.7.9 support dynamic plugin; start IDEA by shell will with path env!</li>
            <li>0.7.8 add zip/unzip IDEA plugin; support config plugin;</li>
            <li>0.7.7 add node: zip, unzip, httpHead; support uni http: GET, POST, PUT, DELETE, HEAD; telnets support proxy;</li>
            <li>0.7.6 support language java, go(?), js(?), python, rust(?) code run, like Code Runner</li>
            <li>0.7.5 cmd support extend command: java, javac, jar; replace aviator to mvel expression; refine telnet.http;</li>
            <li>0.7.4 add node: catch, telnet.http, telnet.https; fix log lib; systemInfo add net; refine app dir; telnet support proxy;</li>
            <li>0.7.3 add node: info, cmd, telnet, telnets; update lib</li>
            <li>0.7.2 template add flag; loop node supports bagsStep; server support jdk embed; refine http</li>
            <li>0.7.1 refine template; timeCount rename to perf and support tps</li>
            <li>0.7.0 remove web socket and excel node</li>
            <li>0.6.9 fix package nest import; fix loop bug</li>
            <li>0.6.7 refine fit template; foreach support object</li>
            <li>0.6.6 refine postman(jui)</li>
            <li>0.6.5 add node: postman(jui)</li>
            <li>0.6.4 refine code complete</li>
            <li>0.6.3 support code complete</li>
            <li>0.6.2 IDE error fix</li>
            <li>0.6.1 support idea version 201+</li>
            <li>0.6.0 support keyword highlight(include and modify idea json code)</li>
            <li>0.5.21 refine loop and foreach node, use parallel mode</li>
            <li>0.5.20 refine expression performance</li>
            <li>0.5.19 add node: timeCount</li>
            <li>0.5.18 refine node</li>
            <li>0.5.17 add node: convertKeyValueList; http node support param1~param9; postman support urlencoded mode</li>
            <li>0.5.16 add node: call; support postman convert to fit; add disable unsafe node such as file</li>
            <li>0.5.15 refine node: stringify support format, foreach support basic array, readFile support dir, http support http status code when error</li>
            <li>0.5.14 add node: readFile, writeFile, parseJson, stringifyJson</li>
            <li>0.5.13 add node: gitPull, server support config fitPath</li>
            <li>0.5.12 support deploy fitlang to aliyun serverless</li>
            <li>0.5.11 Add idle CPU and memory value as serverless</li>
            <li>0.5.10 refine monitor</li>
            <li>0.5.9 monitor clientIp use md5</li>
            <li>0.5.8 monitor page support auto refresh; push monitor data support proxy; bugfix fetch monitor data with second</li>
            <li>0.5.7 update plugin description</li>
            <li>0.5.6 receiveClientMonitorData node support clientIp; parseStringField support get value from context</li>
            <li>0.5.5 add node: getClientMonitorData, receiveClientMonitorData, pushClientMonitorData, getMonitorClient</li>
            <li>0.5.4 fix pipe bug; add online.html page</li>
            <li>0.5.3 add node: getCloudClientMonitorData and support show client monitor data</li>
            <li>0.5.2 monitor node support memory</li>
            <li>0.5.1 monitor node support second param and refine gui</li>
            <li>0.5.0 add node: monitor</li>
            <li>0.4.19 node field support express parse</li>
            <li>0.4.18 refine node: excel, set, execute</li>
            <li>0.4.17 fix foreach bug, index not reset; excelWrite support sheetName param</li>
            <li>0.4.16 server node support default index; assert node support containField and containJson</li>
            <li>0.4.15 excel node support relative path and express</li>
            <li>0.4.14 http add node: postJson, postForm, httpGet, httpPut, httpDelete; add isJsonArrayText support array input</li>
            <li>0.4.13 refine plugin and server mode dir</li>
            <li>0.4.12 refine node: excel support color, assert replace isMatch by success, mix add pickJsonField, http support proxy, server fix local ip bug</li>
            <li>0.4.11 add node: writeExcel</li>
            <li>0.4.10 fix server node reload bug; refine readExcel</li>
            <li>0.4.9 add node: readExcel; remove node: sendToWebsocketClient</li>
            <li>0.4.8 add execute node, refine server mode</li>
            <li>0.4.7 server mode refine</li>
            <li>0.4.6 support server mode start</li>
            <li>0.4.5 add node: mixNode support nest data, support json comment; cloud refine</li>
            <li>0.4.4 add node: cloudServer and cloudClient</li>
            <li>0.4.3 rename websocketServer and websocketClient to wsServer and wsClient</li>
            <li>0.4.2 integrate websocketServer and websocketClient node</li>
            <li>0.4.1 remove flow keyword, keep only two keywords: uni and input(breaking change!)</li>
            <li>0.4.0 remove file server, replace by server node</li>
            <li>0.3.9 add node: websocketServer, websocketClient, sendToWebsocketClient</li>
            <li>0.3.8 add systemInfo node support IDEA-2019.1~2022.2(MacOS)</li>
            <li>0.3.7 plugin support run at folder or multiple files</li>
            <li>0.3.6 plugin min version: IDEA-2016.3</li>
            <li>0.3.5 plugin min version: IDEA-2018.2</li>
            <li>0.3.4 plugin min version: IDEA-2019.2</li>
            <li>0.3.3 server node support rerun</li>
            <li>0.3.2 server node reload bugfix</li>
            <li>0.3.1 server node support reload</li>
            <li>0.3.0 server node rename action to service</li>
            <li>0.2.13 server path refactor</li>
            <li>0.2.12 description improve</li>
            <li>0.2.11 server node bugfix: load only fit file end with .fit or .fit.json</li>
            <li>0.2.10 server node bugfix: meta info list is duplicate</li>
            <li>0.2.9 server node bugfix in windows OS</li>
            <li>0.2.8 server node bugfix; IDEA plugin support 182+</li>
            <li>0.2.7 server node support load action from disk(like JSP)</li>
            <li>0.2.6 add node: thread; server node support port input; loop support bags mode</li>
            <li>0.2.5 add web node; loop node support pipe mode</li>
            <li>0.2.4 bugfix</li>
            <li>0.2.3 add node: mix, replace, eval; support AviatorScript</li>
            <li>0.2.2 add node: proxy</li>
            <li>0.2.1 add node: return</li>
            <li>0.2.0 add node: http, server, fileServer</li>
            <li>0.1.1 add node: sequence, pipe, switch, foreach, loop, hello, echo, add, convert, sleep</li>
        </ul>
        <br/>
        ]]>
    </change-notes>
</idea-plugin>